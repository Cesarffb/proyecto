
package gui;


import java.awt.event.ActionListener;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import sexshop.Articulo;
import sexshop.Funcionario;
import sexshop.HibernateUtil;

/**
 *
 * @author ccp
 */
public class UpdateArticulo extends javax.swing.JDialog {
    Session st = HibernateUtil.getSessionFactory().openSession();
    int ID;
    public int IDART;
    public boolean sw=false;
    public Funcionario userActive;
    /**
     * Creates new form UpdateArticulo
     * @param parent
     * @param modal
     */
    public UpdateArticulo(java.awt.Frame parent, boolean modal) {
        // TODO Sobreescribir evento de click en elemento de tabla (importante)
        super(parent, modal);
        initComponents();
        this.sw = true;
        st.beginTransaction();
        panel_update.setVisible(false);
        this.setSize(550, 460);
        this.ID = 0;
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        LlenarTabla(lista);
    }

    public UpdateArticulo(java.awt.Frame parent, boolean modal, boolean b0, Funcionario userActive) {
        super(parent, modal);
        initComponents();
        this.userActive = userActive;
        this.sw = true;
        //st.beginTransaction();
        panel_update.setVisible(false);
        this.titulo_info.setText("Lista de Articulos");
        this.setSize(550, 460);
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        LlenarTabla(lista);
        
        /* Mostrar informacion de articulo */
        for( ActionListener al : b_buscar.getActionListeners() ) {
            b_buscar.removeActionListener( al );
        }
        b_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarActionPerformed2(evt);
            }
        });
    }
    public UpdateArticulo(java.awt.Frame parent, boolean modal, int iD) {
        // TODO Sobreescribir evento de click en elemento de tabla (importante)
        super(parent, modal);
        initComponents();
        st.beginTransaction();
        panel_busqueda.setVisible(false);
        this.setSize(550, 460);
        this.ID = 0;
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        //VaciarTabla();
        LlenarTabla(lista);
        for( ActionListener al : b_buscar.getActionListeners() ) {
            b_actualizar.removeActionListener( al );
        }
        b_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_actualizarDesdeInfo(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        panel_busqueda = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        titulo_info = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        t_busqueda = new javax.swing.JTextField();
        b_buscar = new javax.swing.JButton();
        panel_update = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        t_producto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_descripcion = new javax.swing.JTextArea();
        t_categoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        t_cantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        t_precioV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        t_precioC = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        b_actualizar = new javax.swing.JButton();
        b_atras = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        panel_busqueda.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        titulo_info.setBackground(new java.awt.Color(0, 204, 153));
        titulo_info.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titulo_info.setForeground(new java.awt.Color(255, 255, 255));
        titulo_info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_info.setText("Actualizar Producto");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(titulo_info, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addGap(120, 120, 120))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(titulo_info, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Articulo", "Categoria", "Precio Compra", "Precio Venta", "Cantidad Disp."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tablaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(30);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        t_busqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda rapida", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        t_busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_busquedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(t_busqueda)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(t_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        b_buscar.setText("Buscar");
        b_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_busquedaLayout = new javax.swing.GroupLayout(panel_busqueda);
        panel_busqueda.setLayout(panel_busquedaLayout);
        panel_busquedaLayout.setHorizontalGroup(
            panel_busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(panel_busquedaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_busquedaLayout.setVerticalGroup(
            panel_busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_busquedaLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
        );

        getContentPane().add(panel_busqueda);

        panel_update.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Producto: ");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 20));

        t_producto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        t_producto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_productoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t_productoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_productoKeyTyped(evt);
            }
        });
        jPanel6.add(t_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 320, 30));

        jButton2.setText("....");
        jPanel6.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        jLabel8.setText("Imagen:");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 20));

        jLabel7.setText("Descripcion:");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        t_descripcion.setColumns(20);
        t_descripcion.setRows(5);
        jScrollPane2.setViewportView(t_descripcion);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 320, 50));

        t_categoria.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel6.add(t_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 320, 30));

        jLabel5.setText("Categoria: ");
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel3.setText("Cantidad: ");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        t_cantidad.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        t_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_cantidadKeyTyped(evt);
            }
        });
        jPanel6.add(t_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 320, 30));

        jLabel6.setText("Precio Venta:");
        jPanel6.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        t_precioV.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel6.add(t_precioV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 320, 30));

        jLabel4.setText("Precio Compra: ");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        t_precioC.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        t_precioC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_precioCActionPerformed(evt);
            }
        });
        jPanel6.add(t_precioC, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 283, 320, 30));

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setBackground(new java.awt.Color(0, 204, 153));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Actualizar Producto");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addGap(120, 120, 120))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        b_actualizar.setText("Actualizar");
        b_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_actualizarActionPerformed(evt);
            }
        });

        b_atras.setText("Atras");
        b_atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_atrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_updateLayout = new javax.swing.GroupLayout(panel_update);
        panel_update.setLayout(panel_updateLayout);
        panel_updateLayout.setHorizontalGroup(
            panel_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_updateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_updateLayout.createSequentialGroup()
                        .addComponent(b_atras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_actualizar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_updateLayout.setVerticalGroup(
            panel_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_updateLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_actualizar)
                    .addComponent(b_atras))
                .addGap(5, 5, 5))
        );

        getContentPane().add(panel_update);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void b_actualizarDesdeInfo(java.awt.event.ActionEvent evt){
        String producto, cate, precioC, precioV, cant, IDD;
        IDD = Integer.toString(IDART);
        producto = t_producto.getText();
        cate = t_categoria.getText();
        precioC = this.t_precioC.getText();
        precioV = this.t_precioV.getText();
        cant = this.t_cantidad.getText();
        System.out.println(IDD);
        try{
            int idArt = Integer.parseInt(IDD);
            
            Articulo art = (Articulo)st.load(Articulo.class, idArt);
            art.setNombreProducto(producto);
            //art.setImagenproducto(imagenproducto);
            art.setCategoria(cate);
            art.setPrecioCompra(Float.parseFloat(precioC));
            art.setPrecioVenta(Float.parseFloat(precioV));
            art.setCantidadDisponible(Integer.parseInt(cant));
            st.update(art);
            st.getTransaction().commit();
            this.dispose();
            JOptionPane.showMessageDialog(null, "Registro de cliente actualizado.");
       }
       catch(Exception e){
           e.printStackTrace();
           JOptionPane.showMessageDialog(null, "Error - Registro no actualizado.");
       }
       this.dispose();
    }
    private void t_busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_busquedaActionPerformed
        // no usado
    }//GEN-LAST:event_t_busquedaActionPerformed

    private void b_buscarActionPerformed2(java.awt.event.ActionEvent evt) { 
        resultadosAR info = new resultadosAR(this, true);
        info.setAlwaysOnTop(true);
        info.setLocationRelativeTo(this);
        String ID = t_busqueda.getText();
        if(ID.equals("")){
            JOptionPane.showMessageDialog(this, "Ingrese Nombre o ID de producto");
        }
        //Session st = HibernateUtil.getSessionFactory().openSession();
        //st.beginTransaction();
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        
        try{
            int id = Integer.parseInt(ID);
            Articulo pro = (Articulo)st.load(Articulo.class, id
                ); 
                info.llenar(pro.getIdproducto(), pro.getNombreProducto(),
                            pro.getCantidadDisponible(),pro.getPrecioCompra(),
                            pro.getPrecioVenta(), pro.getCategoria(),
                            pro.getImagenproducto(), pro.getDescripcion());
        }
        catch(Exception e){
            //Nombre ingresado
            System.out.println("Se ha ingresado un nombre de producto");
            for (Iterator<Articulo> it = lista.iterator(); it.hasNext();) {
                Articulo pro = it.next();
                if(pro.getNombreProducto().equals(ID)){
                    System.out.println(pro.getIdproducto());
                    info.llenar(pro.getIdproducto(), pro.getNombreProducto(),
                              pro.getCantidadDisponible(),pro.getPrecioCompra(),
                              pro.getPrecioVenta(), pro.getCategoria(),
                              pro.getImagenproducto(), pro.getDescripcion());
                    t_busqueda.requestFocus();
                    return;
                    }
                }
            JOptionPane.showMessageDialog(this, "No encontrado");
            return;
        }
        this.setVisible(false);
        info.setVisible(true);
        t_busqueda.requestFocus();
    }
    private void b_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscarActionPerformed
        // Busqueda rapida de actualizacion
        String ID = t_busqueda.getText();
        if(ID.equals("")){
            JOptionPane.showMessageDialog(this, "Ingrese Nombre o ID de producto");
        }
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        
        try{
            int id = Integer.parseInt(ID);
            this.ID = id;
            Articulo pro = (Articulo)st.load(Articulo.class, id
                ); 
                EnviarRes(pro.getIdproducto(), pro.getNombreProducto(),
                            pro.getCantidadDisponible(),pro.getPrecioCompra(),
                            pro.getPrecioVenta(), pro.getCategoria(),
                            pro.getImagenproducto(), pro.getDescripcion());
        }
        catch(Exception e){
            //Nombre ingresado
            System.out.println("Se ha ingresado un nombre de producto");
            for (Iterator<Articulo> it = lista.iterator(); it.hasNext();) {
                Articulo pro = it.next();
                if(pro.getNombreProducto().equals(ID)){
                    System.out.println(pro.getIdproducto());
                    EnviarRes(pro.getIdproducto(), pro.getNombreProducto(),
                              pro.getCantidadDisponible(),pro.getPrecioCompra(),
                              pro.getPrecioVenta(), pro.getCategoria(),
                              pro.getImagenproducto(), pro.getDescripcion());
                    t_busqueda.requestFocus();
                    panel_busqueda.setVisible(false);
                    panel_update.setVisible(true);
                    this.ID = Integer.parseInt(ID);
                    return;
                    }
                }
            JOptionPane.showMessageDialog(this, "No encontrado");
            return;
        }
        this.ID = Integer.parseInt(ID);
        t_busqueda.requestFocus();
        panel_busqueda.setVisible(false);
        panel_update.setVisible(true);
        //st.close();
    }//GEN-LAST:event_b_buscarActionPerformed

    private void t_productoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_productoKeyPressed
        //Muestra lo ingresado despues de ingresar el siguiente caracter
        //System.out.println(t_producto.getText());
    }//GEN-LAST:event_t_productoKeyPressed

    private void t_productoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_productoKeyReleased
        /*System.out.println(t_producto.getText());
        Session st = HibernateUtil.getSessionFactory().openSession();
        st.beginTransaction();
        List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
        for (Iterator<Articulo> it = lista.iterator(); it.hasNext();) {
            Articulo pro = it.next();
            if(pro.getNombreProducto().equals(t_producto.getText())){
                //System.out.println(pro.getProducto());
                t_ya.setVisible(true);
                b_registrar.setText("Actualizar");
                break;
            }
            else{t_ya.setVisible(false);
                b_registrar.setText("Guardar");}
            //System.out.println(pro.getProducto());
        }*/
    }//GEN-LAST:event_t_productoKeyReleased

    private void t_productoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_productoKeyTyped
        // Key typed del nombre del producto

        //if (!t_producto.getText().equals("")) cont++;
    }//GEN-LAST:event_t_productoKeyTyped

    private void t_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cantidadKeyTyped
        //if (!t_cantidad.getText().equals("")) cont++;
    }//GEN-LAST:event_t_cantidadKeyTyped

    private void t_precioCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_precioCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_precioCActionPerformed

    private void b_atrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_atrasActionPerformed
        // Volver al jdialog update info
        t_busqueda.setText("");
        t_busqueda.requestFocus();
        panel_update.setVisible(false);
        panel_busqueda.setVisible(true);
    }//GEN-LAST:event_b_atrasActionPerformed

    private void b_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_actualizarActionPerformed
        // Actualizar producto
        if(!sw)return;
        System.out.println("Entroooo puta");
        String producto, cate, precioC, precioV, cant, IDD;
        IDD = t_busqueda.getText();
        producto = t_producto.getText();
        cate = t_categoria.getText();
        precioC = this.t_precioC.getText();
        precioV = this.t_precioV.getText();
        cant = this.t_cantidad.getText();
        System.out.println(IDD);
        try{
            int idArt = Integer.parseInt(IDD);
            
            Articulo art = (Articulo)st.load(Articulo.class, idArt);
            art.setNombreProducto(producto);
            //art.setImagenproducto(imagenproducto);
            art.setCategoria(cate);
            art.setPrecioCompra(Float.parseFloat(precioC));
            art.setPrecioVenta(Float.parseFloat(precioV));
            art.setCantidadDisponible(Integer.parseInt(cant));
            st.update(art);
            st.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Registro de cliente actualizado.");
       }
       catch(Exception e){
           e.printStackTrace();
           JOptionPane.showMessageDialog(null, "Error - Registro no actualizado.");
       }
       this.dispose();
    }//GEN-LAST:event_b_actualizarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // Al hacer un click directo sobre un elemento
        //System.out.println("Clickeado................");
        DefaultTableModel dtm = (DefaultTableModel) this.tabla.getModel();
        int selectedRow = this.tabla.getSelectedRow();
        Object valueAt = dtm.getValueAt(selectedRow, 0);
        int idArt = Integer.parseInt(valueAt.toString());
        resultadosAR info = new resultadosAR(this, true);
        info.setAlwaysOnTop(true);
        info.setLocationRelativeTo(this);
        Articulo pro = (Articulo)st.load(Articulo.class, idArt); 
        info.llenar(pro.getIdproducto(), pro.getNombreProducto(),
                pro.getCantidadDisponible(),pro.getPrecioCompra(),
                pro.getPrecioVenta(), pro.getCategoria(),
                pro.getImagenproducto(), pro.getDescripcion());
        this.setVisible(false);
        info.Vendedor(this.userActive);
        info.setVisible(true);
        //t_busqueda.requestFocus();
    }//GEN-LAST:event_tablaMouseClicked

    private void tablaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseEntered
        // Al hacer un click directo sobre un elemento xd
        //System.out.println("Clickeado...........................");
    }//GEN-LAST:event_tablaMouseEntered

    private void tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMousePressed
        // Al hacer un click directo sobre un elemento xdxd
        //System.out.println("Clickeado......................");
    }//GEN-LAST:event_tablaMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateArticulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateArticulo dialog = new UpdateArticulo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_actualizar;
    private javax.swing.JButton b_atras;
    private javax.swing.JButton b_buscar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panel_busqueda;
    private javax.swing.JPanel panel_update;
    private javax.swing.JTextField t_busqueda;
    private javax.swing.JTextField t_cantidad;
    private javax.swing.JTextField t_categoria;
    private javax.swing.JTextArea t_descripcion;
    private javax.swing.JTextField t_precioC;
    private javax.swing.JTextField t_precioV;
    private javax.swing.JTextField t_producto;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel titulo_info;
    // End of variables declaration//GEN-END:variables

    void LlenarTabla(List<Articulo> lista) {
        //DefaultTableModel dtm= new DefaultTableModel();
        DefaultTableModel dtm = (DefaultTableModel) this.tabla.getModel();
        //System.out.println(ListaProductos.size());
        //Object[] data = new Object[5];
        for (Iterator<Articulo> it = lista.iterator(); it.hasNext();) {
            Articulo pro = it.next();
            dtm.addRow(new Object[]{
                            pro.getIdproducto(),pro.getNombreProducto(),pro.getCategoria(),pro.getPrecioCompra(),
                            pro.getPrecioVenta(), pro.getCantidadDisponible()
            });
        }
        this.tabla.getColumnModel().getColumn(0).setPreferredWidth(20);
        this.tabla.getColumnModel().getColumn(1).setPreferredWidth(200);
        this.tabla.getColumnModel().getColumn(2).setPreferredWidth(80);
        this.tabla.getColumnModel().getColumn(3).setPreferredWidth(80);
        tabla.setModel(dtm);
        /*for(int row = 0; row < 2; row++) {
        for(int column = 0; column < 2; column++) {
        data[column] = "Celda " + row + "," + column;
        }
        dtm.addRow(data);
        }*/
        /*for (Iterator it = ListaProductos.iterator(); it.hasNext();) {
            Object ListaProducto = it.next();
            System.out.println(ListaProducto);
        }*/
    }

    private void EnviarRes(Integer idproducto, String nombreProducto, Integer cantidadDisponible, Float precioCompra, Float precioVenta, String categoria, byte[] imagenproducto, String descripcion) {
        t_producto.setText(nombreProducto);
        t_cantidad.setText(Integer.toString(cantidadDisponible));
        t_categoria.setText(categoria);
        t_precioC.setText(Float.toString(precioCompra));
        t_precioV.setText(Float.toString(precioVenta));
        t_descripcion.setText(descripcion);
    }

    private void VaciarTabla() {
        DefaultTableModel d = (DefaultTableModel) null;
        tabla.setModel(d);
    }

    public void EnviarResA(Integer ID, String nombre, String cantidad, String categoria, String descripcion, String precioV, String precioC) {
        this.IDART = ID;
        t_producto.setText(nombre);
        t_cantidad.setText(cantidad);
        t_categoria.setText(categoria);
        t_precioC.setText(precioC);
        t_precioV.setText(precioV);
        t_descripcion.setText(descripcion);
    }
}
